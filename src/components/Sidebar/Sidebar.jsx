import React, { useState } from "react";

import { NavLink } from "react-router-dom";
import navLinks from "../../assets/dummy-data/navLinks";
import "./sidebar.css";
import {useNavigate } from 'react-router-dom';

const Sidebar = () => {
  const navigate = useNavigate()
  const [token, setToken] = useState(getTokenFromCookie());

  // Function to get the token value from the cookie
  function getTokenFromCookie() {
    const cookieValue = document.cookie
      .split('; ')
      .find(row => row.startsWith('yourTokenCookieName='))
      ?.split('=')[1];

    return cookieValue || '';
  }

  const handleLogout = () => {
    clearTokenCookie();
   navigate("/login")
    setToken('');
    // You can also perform additional logout-related actions if needed
  };


  const clearTokenCookie = () => {
    // Set the expiration date in the past to delete the cookie
    document.cookie = 'token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';
  };
  
  return (
    <div className="sidebar">
      <div className="sidebar__top">
        <h2>
          <span>
            <i class="ri-taxi-line"></i>
          </span>{" "}
          <svg
    xmlns="http://www.w3.org/2000/svg"
    width="170"
    height="40"
    viewBox="0 0 170 40"
    fill="none"
  >
    {/* <mask
      id="mask0_667_345"
      style="mask-type:luminance"
      maskUnits="userSpaceOnUse"
      x="0"
      y="0"
      width="170"
      height="40"
    >
      <path d="M169.934 0H0V40H169.934V0Z" fill="white" />
    </mask> */}
    <g mask="url(#mask0_667_345)">
      <path
        d="M69.3619 22.1126C67.3216 21.8045 67.0564 21.8678 66.4484 22.7778C64.8345 21.8596 63.0737 21.3495 61.3334 22.08C60.2614 22.5721 59.3298 23.3248 58.6239 24.2692C57.1569 26.2116 57.3405 29.2271 58.8279 31.2062C60.5703 33.5219 63.0656 33.9014 66.5055 32.3141L69.0477 37.8821C65.6547 39.8856 62.125 40.512 58.4382 39.4388C54.6902 38.3472 52.0704 35.7051 50.1995 32.0081V39.196H42.7606V36.7742C42.5892 36.8313 42.479 36.8293 42.43 36.8884C38.1026 42.0789 27.5134 41.222 25.1079 30.9471C23.9307 25.9076 24.9978 21.2904 28.7621 17.7566C32.4101 14.3289 38.1352 14.2616 41.9955 17.4424C42.1648 17.5832 42.3443 17.7118 42.6769 17.9668V15.8816H50.1587V23.2817C51.0666 21.9167 51.7685 20.5804 52.7131 19.4868C56.1653 15.496 60.4459 14.4616 65.3201 15.5633C66.5912 15.851 67.9297 15.802 69.3293 15.9143V7.23892H76.8784V15.747H80.8672V0.00199737C83.2727 0.00199737 85.5823 -0.00820409 87.8899 0.0244406C88.0572 0.0244406 88.2979 0.318244 88.3653 0.526354C88.4489 0.779351 88.3918 1.08744 88.3918 1.37308V22.7961C90.024 19.2644 92.2316 16.508 95.8858 15.545C99.4543 14.6044 102.77 15.2491 105.755 17.9382C105.791 17.2017 105.82 16.6161 105.853 15.9285H113.285V39.1879H105.94V36.513C103.053 39.7632 99.6909 40.4957 96.0327 39.6041C92.3173 38.6921 90.0261 35.9458 88.4489 32.2794V39.2552C87.945 39.2552 87.5655 39.245 87.186 39.2552C84.2541 39.347 81.312 38.9899 78.4005 39.8061C77.4109 40.0835 76.2745 39.9713 75.24 39.8061C72.0511 39.2858 70.0944 37.1353 69.6027 33.5709C69.3987 32.0325 69.3987 30.4533 69.3762 28.8925C69.3354 26.64 69.3619 24.3998 69.3619 22.1126ZM105.969 27.5276C105.969 24.3325 103.863 22.0739 100.917 22.0881C97.971 22.1024 95.8654 24.4018 95.8531 27.5663C95.8531 30.8022 97.9587 33.0649 100.984 33.0486C103.916 33.0241 105.977 30.7451 105.969 27.5276ZM32.7223 27.5541C32.7223 30.7982 34.732 33.018 37.7149 33.0404C40.6978 33.0629 42.8361 30.7553 42.8157 27.5316C42.7973 24.3875 40.7243 22.1187 37.8496 22.0881C34.8483 22.0575 32.7346 24.3019 32.7223 27.5541ZM76.9029 22.0575C76.9029 24.7099 76.8764 27.2725 76.9029 29.8331C76.9396 32.5222 78.0148 33.2261 80.253 32.0897C80.2979 32.0652 80.3673 32.0897 80.4061 32.0897C80.5326 32.308 80.6529 32.514 80.8141 32.7854V22.0575H76.9029Z"
        fill="white"
      />
      <path
        d="M160.567 28.6722H144.857C144.741 30.6758 145.449 32.0836 147.132 32.867C150.07 34.232 152.614 33.4648 154.771 30.8982L160.18 33.8056C158.052 37.6495 154.836 39.3817 150.931 39.8306C145.271 40.4773 140.933 38.2228 137.895 32.6426V39.1716H130.379C130.363 38.8043 130.332 38.4268 130.332 38.0514C130.332 34.2442 130.332 30.435 130.32 26.6258C130.333 25.9168 130.255 25.209 130.087 24.5202C129.506 22.3942 127.867 21.268 125.852 21.5169C123.903 21.7556 122.04 23.7959 122.014 25.8933C121.961 29.878 121.991 33.8647 121.989 37.8515C121.989 38.2718 121.989 38.6921 121.989 39.1797H114.536V15.8346C116.874 15.8346 119.186 15.8223 121.496 15.8611C121.663 15.8611 121.936 16.2345 121.967 16.4732C122.038 16.9914 121.989 17.528 121.989 18.3992C124.687 15.4571 127.714 14.5696 131.195 15.5428C134.676 16.516 137.179 18.4992 137.816 22.737C138.873 20.4926 140.264 18.7604 142.054 17.4158C147.095 13.6311 154.854 14.6879 158.409 19.6744C160.28 22.2901 160.667 25.3384 160.567 28.6722ZM145 24.0713H153.128C152.924 21.9005 151.496 20.5069 149.429 20.4355C146.867 20.3477 145.391 21.523 145 24.0713Z"
        fill="white"
      />
      <path
        d="M1.28339 15.8286C4.27039 15.8286 7.01051 15.8143 9.74858 15.8571C10.0016 15.8571 10.3056 16.1917 10.4913 16.4509C11.6012 17.9974 12.6825 19.5684 13.8557 21.2496C14.9595 19.6745 16.0347 18.1892 17.0406 16.6732C17.4487 16.0612 17.8792 15.7939 18.5933 15.8082C20.813 15.8571 23.0329 15.8265 25.2527 15.8265H26.432L18.4525 27.0216C21.5129 31.043 24.5529 35.0522 27.7337 39.243C24.6835 39.243 21.8495 39.2654 19.0176 39.2103C18.7116 39.2103 18.3505 38.8145 18.122 38.5085C16.7223 36.6191 15.3533 34.7033 13.872 32.6569C12.9253 33.9463 11.8868 35.0624 11.1809 36.3865C9.91793 38.7655 8.18163 39.6225 5.67207 39.2899C3.88069 39.0553 2.04034 39.245 0.00616455 39.245C1.061 37.8433 2.00158 36.5926 2.95236 35.3378C4.85799 32.8303 6.75547 30.3126 8.68967 27.8275C9.14466 27.2419 9.1977 26.8563 8.72231 26.2075C6.25968 22.8533 3.86641 19.4501 1.28339 15.8286Z"
        fill="white"
      />
      <path
        d="M165.15 39.9367C167.792 39.9367 169.934 37.7178 169.934 34.9808C169.934 32.2437 167.792 30.0249 165.15 30.0249C162.507 30.0249 160.365 32.2437 160.365 34.9808C160.365 37.7178 162.507 39.9367 165.15 39.9367Z"
        fill="#0BC36B"
      />
    </g>
  </svg>
        </h2>
      </div>

      <div className="sidebar__content">
        <div className="menu">
          <ul className="nav__list">
            {navLinks.map((item, index) => (
              <li className="nav__item" key={index}>
                <NavLink
                  to={item.path}
                  className={(navClass) =>
                    navClass.isActive ? "nav__active nav__link" : "nav__link"
                  }
                >
                  <i className={item.icon}></i>

                  {item.display}
                </NavLink>
              </li>
            ))}
          </ul>
        </div>

        <div className="sidebar__bottom">
        <span onClick={()=>handleLogout()}>
      <i className="ri-logout-circle-r-line"></i> Logout
    </span>
        </div>
      </div>
    </div>
  );
};

export default Sidebar;
